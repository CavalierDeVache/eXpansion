declare Window <=> Page.GetFirstChild("<?php echo $win->getId() ?>");
// set hidden to reduce flicker
declare MoveWindow = False;
declare CMlQuad quad <=> (Page.GetFirstChild("enableMove") as CMlQuad);

declare CMlLabel coordLabel <=> (Page.GetFirstChild("coordLabel") as CMlLabel);
declare CMlLabel coordButton <=> (Page.GetFirstChild("coordButton") as CMlLabel);
declare CMlEntry coordInput <=> (Page.GetFirstChild("_widgetPosition") as CMlEntry);

declare Vec3 LastDelta = <Window.RelativePosition.X, Window.RelativePosition.Y, -3.0>;
declare Vec3 DeltaPos = <0.0, 0.0, -3.0>;
declare Real lastMouseX = 0.0;
declare Real lastMouseY = 0.0;
declare CMlControl element;

declare Boolean exp_needToCheckPersistentVars for UI = False;
declare Integer exp_multipleCheckCount = 0;

declare Boolean exp_enableHudMove for UI = False;
exp_enableHudMove = False;

declare Vec3[Text][Text][Text] widgetLastPosRel =  Vec3[Text][Text][Text];
declare persistent Boolean[Text][Text][Text] eXp_widgetVisible = Boolean[Text][Text][Text];
declare Boolean exp_widgetVisibleBuffered;

declare Text version = "<?php echo $this->version ?>";
declare Text id = "<?php echo $this->name ?>";
declare Text gameMode = "<?php echo $this->gameMode; ?>";
declare Boolean forceReset = <?php echo $this->forceReset ?>;

declare Boolean disablePersonalHud = <?php echo $this->disablePersonalHud; ?>;

declare Boolean exp_widgetCurrentVisible = False;
declare Boolean exp_widgetVisibilityChanged = False;
declare Integer eXp_lastWidgetCheck = 0;
declare Boolean eXp_firstPersistentCheckDone = False;

if (!eXp_widgetVisible.existskey(version) ) {
	eXp_widgetVisible[version] = Boolean[Text][Text];
}

if ( !eXp_widgetVisible[version].existskey(id) || forceReset) {
	eXp_widgetVisible[version][id] = Boolean[Text];
}

if ( !eXp_widgetVisible[version][id].existskey(gameMode) ) {
	eXp_widgetVisible[version][id][gameMode] = <?php echo $win->getWidgetVisible(); ?>;
}

if (!widgetLastPosRel.existskey(version)) {
	widgetLastPosRel[version] = Vec3[Text][Text];
}

if (!widgetLastPosRel[version].existskey(id) || forceReset) {
    widgetLastPosRel[version][id] = Vec3[Text];
}

if (!widgetLastPosRel[version][id].existskey(gameMode)) {
	widgetLastPosRel[version][id][gameMode] = < <?php echo $this->getNumber($win->getPosX()) ?>, <?php echo $this->getNumber($win->getPosY()) ?>, -3.0>;
}

if(!disablePersonalHud){
    LastDelta = widgetLastPosRel[version][id][gameMode];
    Window.RelativePosition = widgetLastPosRel[version][id][gameMode];

    exp_widgetCurrentVisible = eXp_widgetVisible[version][id][gameMode];
    exp_widgetVisibleBuffered = eXp_widgetVisible[version][id][gameMode];

    // reduce flickering on normal layer, when widget update.
    if(!eXp_widgetVisible[version][id][gameMode]) {
	    Window.Hide();
	    exp_widgetCurrentVisible = False;
    }

    if (exp_enableHudMove == True) {
	    quad.Show();
    }else {
	    quad.Hide();
    }
} else {
    exp_widgetCurrentVisible = True;
    exp_widgetVisibleBuffered = True;
    quad.Hide();
}
