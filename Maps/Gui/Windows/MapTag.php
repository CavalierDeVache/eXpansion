<?php

namespace ManiaLivePlugins\eXpansion\Maps\Gui\Windows;

use ManiaLib\Database\Connection;
use ManiaLib\Gui\Layouts\Line;
use ManiaLive\Gui\Controls\Frame;
use ManiaLivePlugins\eXpansion\Gui\Elements\Button;
use ManiaLivePlugins\eXpansion\Gui\Elements\Dropdown;
use ManiaLivePlugins\eXpansion\Gui\Gui;
use ManiaLivePlugins\eXpansion\Gui\Windows\Window;
use ManiaLivePlugins\eXpansion\Helpers\Console;
use ManiaLivePlugins\eXpansion\Maps\Structures\DbMap;

class MapTag extends Window
{

    /** @var  Dropdown */
    protected $difficulty;
    /** @var  Dropdown */
    protected $style;
    protected $save;
    protected $mapUID;
    /** @var  Connection */
    protected $db;

    public function onConstruct()
    {
        parent::onConstruct(); // TODO: Change the autogenerated stub
        $this->setTitle("Update Map tags");

        $frame = new Frame();
        $frame->setLayout(new Line());

        $this->difficulty = new Dropdown('difficulty');
        $this->difficulty->addItems(array("Beginner", "Intermediate", "Advanced", "Expert"));
        $frame->addComponent($this->difficulty);

        $this->style = new Dropdown('style');
        $this->style->addItems(array("Race", "Fullspeed", "Tech", "RPG", "LOL", "Press Forward", "Speedtech", "Multilap", "Offroad", "Trial"));
        $frame->addComponent($this->style);

        $this->save = new Button();
        $this->save->setText("Save");
        $this->save->setAction($this->createAction(array($this, "ok")));
        $frame->addComponent($this->save);

        $this->mainFrame->addComponent($frame);

        $config = \ManiaLive\Database\Config::getInstance();
        $this->db = \ManiaLive\Database\Connection::getConnection(
            $config->host,
            $config->username,
            $config->password,
            $config->database,
            $config->type,
            $config->port
        );
    }


    public function ok($login, $entries)
    {
        $diff = $this->difficulty->getValueByIndex($entries['difficulty']);
        $style = $this->style->getValueByIndex($entries['style']);

        try {
            $sql = "UPDATE `exp_maps` SET                  
                     `mx_styleName`=" . $this->db->quote($style) . ",                     
                     `mx_difficultyName` = " . $this->db->quote($diff) . "                                        
                    WHERE `challenge_uid` = " . $this->db->quote($this->mapUID) . ";";

            $this->db->execute($sql);
            Gui::showNotice("Saved.", $login);
        } catch (\Exception $ex) {
            Console::out("Error: " . $ex->getMessage(), "Database", Console::b_red);
            Gui::showNotice("Error: " . $ex->getMessage(), $login);
        }

        $this->closeWindow();
    }


    public function setMap($uid)
    {
        $this->mapUID = $uid;

        $query = "SELECT * FROM `exp_maps` WHERE `challenge_uid` = " . $this->db->quote($uid) . ";";
        $array = $this->db->execute($query)->fetchArray();
        $this->map = DbMap::fromArray($array);

        foreach (array("Beginner", "Intermediate", "Advanced", "Expert") as $key => $value) {
            if ($this->map->difficultyName == $value) {
                $this->difficulty->setSelected($key);
            }
        }

        foreach (array("Race", "Fullspeed", "Tech", "RPG", "LOL", "Press Forward", "Speedtech", "Multilap", "Offroad", "Trial") as $key => $value) {
            if ($this->map->styleName == $value) {
                $this->style->setSelected($key);
            }
        }

    }


}